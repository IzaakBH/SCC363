Index: src/main/java/com/scc363/hospitalproject/datamodels/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.scc363.hospitalproject.datamodels;\r\n\r\n\r\nimport java.util.Properties;\r\nimport javax.mail.*;\r\nimport javax.mail.internet.*;\r\nimport javax.mail.Session;\r\n\r\nimport com.scc363.hospitalproject.constraints.UniqueEmail;\r\nimport com.scc363.hospitalproject.constraints.UniqueUsername;\r\nimport com.scc363.hospitalproject.constraints.ValidPassword;\r\nimport com.scc363.hospitalproject.services.CodeGen;\r\n\r\nimport javax.persistence.*;\r\nimport javax.validation.constraints.Email;\r\nimport javax.validation.constraints.NotBlank;\r\nimport javax.validation.constraints.Size;\r\n\r\n@Entity\r\npublic class User {\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.AUTO)\r\n    private Integer id;\r\n\r\n    @UniqueUsername\r\n    @Size(min=3, max=20)\r\n    @Column(unique = true)\r\n    private String username;//TODO: This HAS to be changed to a secure format. A package will exist for this.\r\n\r\n    @ValidPassword\r\n    private String password;\r\n\r\n    @UniqueEmail\r\n    @Email( message = \"Email address should be valid\")\r\n    @Column(unique=true)\r\n    private String email;\r\n\r\n    @NotBlank(message = \"Choose a user type\")\r\n    private String userType;\r\n\r\n    @NotBlank(message = \"Choose a user first name\")\r\n    private String first;\r\n\r\n    @NotBlank(message = \"Choose a user last name\")\r\n    private String last;\r\n\r\n    String code;\r\n    // Getters and setters\r\n\r\n    public String getEmail() {\r\n        return email;\r\n    }\r\n\r\n    public void setEmail(String email) {\r\n        this.email = email;\r\n    }\r\n\r\n\r\n    public String getUsername() {\r\n        return username;\r\n    }\r\n\r\n    public void setUsername(String username) {\r\n        this.username = username;\r\n    }\r\n\r\n    public String getUserType() {\r\n        return userType;\r\n    }\r\n\r\n    public void setUserType(String type) {\r\n        userType = type;\r\n    }\r\n\r\n    public String getPassword() {\r\n        return password;\r\n    }\r\n\r\n    public void setPassword(String password) {\r\n        this.password = password;\r\n    }\r\n\r\n    public String getFirst() {\r\n        return first;\r\n    }\r\n\r\n    public void setFirst(String first) {\r\n        this.first = first;\r\n    }\r\n\r\n    public String getLast() {\r\n        return last;\r\n    }\r\n\r\n    public void setLast(String last) {\r\n        this.last = last;\r\n    }\r\n    @Override\r\n    public String toString() {\r\n        return String.format(\"Username: %s is a %s. Password: %s, EmailL %s]\", username, userType, password, email);\r\n    }\r\n\r\n    public void sendEmail(String to){\r\n        String from = \"scc363gr@gmail.com\";\r\n        String password = \"SCC363group\";\r\n        String sub = \"Code\";\r\n        CodeGen c = new CodeGen();\r\n        String msg = String.valueOf(c.generateCode());\r\n        code = msg;\r\n\r\n\r\n        Properties props = new Properties();\r\n        props.put(\"mail.smtp.host\", \"smtp.gmail.com\");\r\n        props.put(\"mail.smtp.socketFactory.port\", \"465\");\r\n        props.put(\"mail.smtp.socketFactory.class\",\r\n                \"javax.net.ssl.SSLSocketFactory\");\r\n        props.put(\"mail.smtp.auth\", \"true\");\r\n        props.put(\"mail.smtp.port\", \"465\");\r\n        //get Session\r\n        Session session = Session.getDefaultInstance(props,\r\n                new javax.mail.Authenticator() {\r\n                    protected PasswordAuthentication getPasswordAuthentication() {\r\n                        return new PasswordAuthentication(from,password);\r\n                    }\r\n                });\r\n        //compose message\r\n        try {\r\n\r\n            MimeMessage message = new MimeMessage(session);\r\n            message.addRecipient(Message.RecipientType.TO,new InternetAddress(to));\r\n            message.setSubject(sub);\r\n            message.setText(msg);\r\n            //send message\r\n            Transport.send(message);\r\n            System.out.println(\"message sent successfully\");\r\n        } catch (MessagingException e) {throw new RuntimeException(e);}\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/scc363/hospitalproject/datamodels/User.java b/src/main/java/com/scc363/hospitalproject/datamodels/User.java
--- a/src/main/java/com/scc363/hospitalproject/datamodels/User.java	(revision 3ac332ea09592b7b1c0b0fe91d3bac0134ed3e8e)
+++ b/src/main/java/com/scc363/hospitalproject/datamodels/User.java	(date 1611525315569)
@@ -9,7 +9,6 @@
 import com.scc363.hospitalproject.constraints.UniqueEmail;
 import com.scc363.hospitalproject.constraints.UniqueUsername;
 import com.scc363.hospitalproject.constraints.ValidPassword;
-import com.scc363.hospitalproject.services.CodeGen;
 
 import javax.persistence.*;
 import javax.validation.constraints.Email;
